@model Ecom.Models.Item
@using Ecom.Extensions

@{ ViewBag.Title = "Modifier les informations de l'article"; }
<style>
    .form-horizontal {
        background-color: white;
        padding: 40px;
        border: 1px solid #ddd;
        margin-top: 20px;
    }

    textarea {
        outline-width: 0;
        height: auto;
        padding: 7px;
        display: block;
        width: 100%;
        font-size: 15px;
        line-height: 1.42857143;
        color: #6f6f6f;
        background-color: #ffffff;
        background-image: none;
        border: 1px solid #cccccc;
        border-radius: 0;
        -webkit-box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
        box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
        -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }
    .form-horizontal p {
        font-size: 20px;
    }
</style>
<h2>@ViewBag.Title</h2>

@*@using (Html.BeginForm())*@
@if (@ViewBag.Vld == true)
{
    using (Html.BeginForm("Edit", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="col-sm-offset-3 col-sm-6  form-horizontal">

            @Html.HiddenFor(model => model.ID)
            <div class="form-group">
                <div class="">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "Article", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "Article invalide", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <span>Catégorie</span>
                <div>
                    @Html.DropDownList("CatagorieId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CatagorieId, "Catégorie invalide", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <span>Marque</span>
                <div>
                    @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BrandId, "Marque invalide", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <span>Taille</span>
                <div>
                    @Html.DropDownList("SizeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SizeId, "Taille invalide", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div>
                    @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { placeholder = "Prix avant la réduction", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OldPrice, "Prix invalide", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { placeholder = "Prix", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "Prix invalide", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.TextAreaFor(model => model.Description, new { @placeholder = "Description" })
                @Html.ValidationMessageFor(model => model.Description, "Description invalide", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                <span>
                    Image 1
                </span>
                @Html.FileFor(model => model.File)
                @Html.ValidationMessageFor(model => model.File)
            </div>

            <div class="form-group">
                <span>
                    Image 2
                </span>
                @Html.FileFor(model => model.File2)
                @Html.ValidationMessageFor(model => model.File2)
            </div>


            <div class="form-group">
                <span>
                    Image 3
                </span>
                @Html.FileFor(model => model.File3)
                @Html.ValidationMessageFor(model => model.File3)
            </div>
            <div class="form-group">
                <div class="text-center">
                    <input type="submit" value="Enregistrer" class="btn btn-success" />
                </div>
            </div>
        </div>}


}
else
{
    <div class="col-sm-offset-3 col-sm-6  form-horizontal text-center">
        <p>Il faut ajouter au moins une catégorie,une taille et une marque pour pouvoir modifier un article .</p>
    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}